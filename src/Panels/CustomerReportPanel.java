/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Classes.Loader;
import Classes.Shipment;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author smart view
 */
public class CustomerReportPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerReportPanel
     */
    public CustomerReportPanel(String id) {
        initComponents();
        username = id;
        li.Shipment();
        sHlist = li.return_shipment();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton1.setText("Report on your shipment history");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 44;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(149, 302, 0, 288);
        add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 204, 0));
        jButton2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton2.setText("Report on your last shipment status");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 302, 196, 288);
        add(jButton2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        li.Shipment();
     
        sHlist = li.return_shipment();
        if(sHlist.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"No Shipments were Created");
        }
        
        else
        {
       JFileChooser chooser = new JFileChooser();
        if(chooser.showSaveDialog(this)==JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
        try{
            Document doc = new Document();
            PdfWriter writer  = PdfWriter.getInstance(doc,new FileOutputStream(file.getAbsolutePath()+".pdf"));
            doc.open();
            doc.add(new Paragraph("Report of Shipment History of User "+username));
            if(!(sHlist.isEmpty()))
            {
            doc.add(new Paragraph("\nShipments In Progress: "));
            
            for(Shipment obj: sHlist)
            {
                if(obj.get_ownerID().equals(username) && obj.get_deliveryStatus().equals("In Progress"))
                {
                    doc.add(new Paragraph("\nShipment ID: "+obj.get_trackID()+"\nShipment Type: "+obj.get_shipmentType()+"\nPickup Location: "+obj.get_pickup()+"\nDestination: "+obj.get_destination()+"\nDate Sent: "+obj.get_creationD().toString()));
                }
            }
            }
         
            doc.add(new Paragraph("\nCompleted Shipments: "));
            for(Shipment obj: sHlist)
            {
                if(obj.get_ownerID().equals(username) && obj.get_deliveryStatus().equals("Delivery Complete"))
                {
                    doc.add(new Paragraph("\nShipment ID: "+obj.get_trackID()+"\nShipment Type: "+obj.get_shipmentType()+"\nPickup Location: "+obj.get_pickup()+"\nDestination: "+obj.get_destination()+"\nDate Sent: "+obj.get_creationD().toString()+"\nDate Received: "+obj.get_received().toString()+"\nProcessed By: "+obj.return_processedBy() ));
                }
            }
            doc.add(new Paragraph("\nDate Printed: "+LocalDate.now()));
            doc.close();
            writer.close();
            JOptionPane.showMessageDialog(null,"File created successfully");
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"Report on Shipments of Customer "+username+".pdf");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean found = false;
        
        li.Shipment();

        sHlist = li.return_shipment();
         Shipment  s = new Shipment();
         if(sHlist.isEmpty() )
          {
            JOptionPane.showMessageDialog(null,"No Shipments were Created");
          }
         else
         {
         for(Shipment obj: sHlist)
            {
                if(obj.get_ownerID().equals(username))
                {
                  s = obj;
                  found = true;
                }
            }
         }
        if(found == true)
        {
         JOptionPane.showMessageDialog(null,"Latest Shipment Tracking ID: "+s.get_trackID()+" \nStatus: "+s.get_deliveryStatus()); 
        }
       else
         {
           JOptionPane.showMessageDialog(null,"No Shipments with your Tracking ID exists");      
         }
         
    }//GEN-LAST:event_jButton2ActionPerformed
     String username;
     Loader li = new Loader();
     ArrayList<Shipment> sHlist = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
