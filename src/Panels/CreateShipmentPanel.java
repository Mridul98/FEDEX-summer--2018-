/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Classes.Loader;
import Classes.Shipment;
import fedex.project.route.Map;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;

/**
 *
 * @author smart view
 */
public class CreateShipmentPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateShipmentPanel
     */
    String username;
    public CreateShipmentPanel(String id) {
        initComponents();
        username = id;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        sizeLabel = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();
        sizeField = new javax.swing.JTextField();
        packageTypeLabel = new javax.swing.JLabel();
        packageTypeCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        deliveryTypeLabel = new javax.swing.JLabel();
        deliveryTypeCombo = new javax.swing.JComboBox<>();
        pickupDCombo = new javax.swing.JComboBox<>();
        pickupDLabel = new javax.swing.JLabel();
        pickupCLabel = new javax.swing.JLabel();
        pickupCField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        destinationDLabel = new javax.swing.JLabel();
        destinationCLabel = new javax.swing.JLabel();
        destinationDCombo = new javax.swing.JComboBox<>();
        contactLabel = new javax.swing.JLabel();
        destinationCField = new javax.swing.JTextField();
        contactField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        paymentLabel = new javax.swing.JLabel();
        paymentTypeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        paymentTxtArea = new javax.swing.JTextArea();
        paymentCombo = new javax.swing.JComboBox<>();
        paymentNumberField = new javax.swing.JPasswordField();
        jButton3 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel1.setText("Info about your parcel");

        weightLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        weightLabel.setText("Weight:");

        sizeLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        sizeLabel.setText("Volume:");

        weightField.setToolTipText("Enter Weight  (in Kg) rouned to nearest upper whole number");

        sizeField.setToolTipText("Enter Volum (cubic meter) rouned to nearest upper whole number");

        packageTypeLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        packageTypeLabel.setText("Type:");

        packageTypeCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        packageTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type", "Electronics", "Glass", "Watch", "Phone", "Documents", "Dvd", "Fruits", "Food", "Other" }));

        jButton1.setBackground(new java.awt.Color(153, 255, 153));
        jButton1.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jButton1.setText("NEXT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jButton4.setText("Cancel");

        deliveryTypeLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        deliveryTypeLabel.setText("Delivery type:");

        deliveryTypeCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        deliveryTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type", "Emergency", "Standard" }));

        pickupDCombo.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        pickupDCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DHAKA", "CHITTAGONG", "RAJSHAHI", "KHULNA", "BARISAL", "SYLHET", "RANGPUR" }));

        pickupDLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        pickupDLabel.setText("Division:");

        pickupCLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        pickupCLabel.setText("City:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(deliveryTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deliveryTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jButton4)
                .addGap(90, 90, 90)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(weightField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pickupDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(pickupDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pickupCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pickupCField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(packageTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(packageTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pickupDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pickupDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickupCField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pickupCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(packageTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(packageTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveryTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliveryTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 21, 0, 0);
        add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel2.setText("Info about destination");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(68, 60, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        destinationDLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        destinationDLabel.setText("Division:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 44, 0, 0);
        jPanel2.add(destinationDLabel, gridBagConstraints);

        destinationCLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        destinationCLabel.setText("City:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 61;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 44, 0, 0);
        jPanel2.add(destinationCLabel, gridBagConstraints);

        destinationDCombo.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        destinationDCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DHAKA", "CHITTAGONG", "RAJSHAHI", "KHULNA", "BARISAL", "SYLHET", "RANGPUR" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 29, 0, 19);
        jPanel2.add(destinationDCombo, gridBagConstraints);

        contactLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        contactLabel.setText("Receivers contact Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 44, 0, 0);
        jPanel2.add(contactLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 123;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 29, 0, 0);
        jPanel2.add(destinationCField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 81;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 4, 0, 0);
        jPanel2.add(contactField, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(153, 255, 153));
        jButton2.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jButton2.setText("NEXT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 23, 69, 0);
        jPanel2.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 69;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 2, 0, 0);
        add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel3.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 104, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        paymentLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        paymentLabel.setText("Payment  options: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 0);
        jPanel3.add(paymentLabel, gridBagConstraints);

        paymentTypeLabel.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        paymentTypeLabel.setText("Credit card number: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel3.add(paymentTypeLabel, gridBagConstraints);

        paymentTxtArea.setColumns(20);
        paymentTxtArea.setRows(5);
        jScrollPane2.setViewportView(paymentTxtArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 261;
        gridBagConstraints.ipady = 105;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 10);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        paymentCombo.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        paymentCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Method", "Credit Card", "Bkash", "Upay", "DBBL Rocket" }));
        paymentCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 21, 0, 0);
        jPanel3.add(paymentCombo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 125;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 18, 0, 0);
        jPanel3.add(paymentNumberField, gridBagConstraints);

        jButton3.setBackground(new java.awt.Color(0, 153, 51));
        jButton3.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jButton3.setText("Done!");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 0, 65, 0);
        jPanel3.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 65;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 19, 31);
        add(jPanel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    public JPanel getPanel1(){
        return this.jPanel1;
    }
    public JPanel getPanel2(){
        return this.jPanel2;
    }
    public JPanel getPanel3(){
        return this.jPanel3;
    }
    private void paymentComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentComboActionPerformed
        // TODO add your handling code here:
        if(paymentCombo.getSelectedIndex()== 1){
            paymentTypeLabel.setText("Credit Card Number");
        }
        else{
            paymentTypeLabel.setText("Mobile Number");
        }
    }//GEN-LAST:event_paymentComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Shipment s = new Shipment();
       boolean deliverable;
       deliverable = s.isDeliverable(Integer.parseInt(weightField.getText()), Integer.parseInt(sizeField.getText()));
       if(deliverable == true)
       {
        jPanel2.setVisible(true);
       }
       else
       {
           JOptionPane.showMessageDialog(null, "Your shipement weight/size exceeds our limits");
       }
    }//GEN-LAST:event_jButton1ActionPerformed
  public void start_shipment()
     {
        SwingWorker<Boolean,Void> worker = new SwingWorker<Boolean,Void>(){
            @Override
            public Boolean doInBackground() throws Exception{
                String fileName="Shipment.bin";
               File file = new File (fileName);
                ObjectOutputStream out = null;
                 boolean append=true;
                    try{
                        if (!file.exists () || !append) out =
                            new ObjectOutputStream (new FileOutputStream (fileName));
                        else out = 
                            new AppendableObjectOutputStream (new FileOutputStream (fileName, append));
                        out.writeObject(sH);
                        out.flush ();
                    }catch (Exception e){
                        //e.printStackTrace ();
                    }finally{
                        try{
                            if (out != null) out.close();
                        }catch (Exception e){
                            //e.printStackTrace();
                        }
        }
                return true;
            }

        };
        worker.execute(); 
     }
    
    class AppendableObjectOutputStream extends ObjectOutputStream {
       public AppendableObjectOutputStream(OutputStream out) throws IOException {
        super(out);
    }
  @Override
    protected void writeStreamHeader() throws IOException {}
    
  }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean weight = false, size = false, pickupD = false, pickupC = false, packageType = false, deliveryType = false, zip = false, destinationD = false, destinationC= false, contactinfo = false;
       
        if(weightField.getText().equals(""))
        {
            weightLabel.setForeground(Color.red);
            weightField.requestFocus();
        }
        else
        {
            weightLabel.setForeground(Color.black);
            weight = true;
        }
        
        if(sizeField.getText().equals(""))
        {
            sizeLabel.setForeground(Color.red);
            sizeField.requestFocus();
        }
        else
        {
            sizeLabel.setForeground(Color.black);
            size = true;
        }
        
        if(pickupDCombo.getSelectedIndex()==0)
        {
            pickupDLabel.setForeground(Color.red);
            pickupDCombo.requestFocus();
        }
        else
        {
            pickupDLabel.setForeground(Color.black);
            pickupD = true;
        }
        
        if(pickupCField.getText().equals(""))
        {
            pickupCLabel.setForeground(Color.red);
            pickupCField.requestFocus();
        }
        else
        {
            pickupCLabel.setForeground(Color.black);
            pickupC = true;
        }
        
        if(packageTypeCombo.getSelectedIndex() == 0)
        {
            packageTypeLabel.setForeground(Color.red);
            packageTypeCombo.requestFocus();
        }
        else
        {
            packageTypeLabel.setForeground(Color.black);
            packageType = true;
        }
        
        if(deliveryTypeCombo.getSelectedIndex() == 0)
        {
            deliveryTypeLabel.setForeground(Color.red);
            deliveryTypeCombo.requestFocus();
        }
        else
        {
            deliveryTypeLabel.setForeground(Color.black);
            deliveryType = true;
        }
          
        if(destinationDCombo.getSelectedIndex() == 0)
        {
            destinationDLabel.setForeground(Color.red);
            destinationDCombo.requestFocus();
        }
        else
        {
           destinationDLabel.setForeground(Color.black);
            destinationD = true;
        }
        
        if(contactField.getText().equals(""))
        {
            contactLabel.setForeground(Color.red);
            contactField.requestFocus();
        }
        else
        {
            contactLabel.setForeground(Color.black);
            contactinfo = true;
        }
        
        if(destinationCField.getText().equals(""))
        {
            destinationCLabel.setForeground(Color.red);
            destinationCField.requestFocus();
        }
        else
        {
            destinationCLabel.setForeground(Color.black);
            destinationC = true;
        }
        if(weight == true && size == true && pickupD == true && pickupC == true && packageType == true && deliveryType == true && destinationD == true && destinationC == true && contactinfo == true)
        {
            int number = 0;
            boolean found = false;
            li.Shipment();
            sHlist = li.return_shipment();
            Shipment inProg = new Shipment();
            Shipment completed = new Shipment();
            if(sHlist.isEmpty())
            {
                shipmentID = "SH0";
            }
            else
            {
            for(Shipment obj: sHlist)
            {
                if(obj.get_ownerID().equals(username))
                {
                  String[] split = obj.get_shipID().split("H");
                  number = Integer.parseInt(split[1]);
                  number++;
                  shipmentID = "SH"+number;
                  found = true;
                }
            }
            if(found == false)
            {
                shipmentID = "SH0";
            }
            }
            m = new Map();
            cost = m.calculateTotalcost(pickupDCombo.getItemAt(pickupDCombo.getSelectedIndex()), destinationDCombo.getItemAt(destinationDCombo.getSelectedIndex()), Integer.parseInt(weightField.getText()), Integer.parseInt(sizeField.getText()), deliveryTypeCombo.getItemAt(deliveryTypeCombo.getSelectedIndex()));
            paymentTxtArea.setText("Your Shipment: \nShipment Type: "+packageTypeCombo.getItemAt(packageTypeCombo.getSelectedIndex())+"\n DeliveryType: "+deliveryTypeCombo.getItemAt(deliveryTypeCombo.getSelectedIndex())+"\nShipment Weight: "+Integer.parseInt(weightField.getText())+"\nShipment Size: "+Integer.parseInt(sizeField.getText())+"\nShipment ID: "+shipmentID+"\nYour User ID: "+username+"\nTracking number: "+username+"-"+shipmentID+ "\nPickup Location:"+"\nDivision: "+pickupDCombo.getItemAt(pickupDCombo.getSelectedIndex())+"\nPickup City: "+ pickupCField.getText()+"\nDestination Location:"+"\nDestination Division: "+destinationDCombo.getItemAt(destinationDCombo.getSelectedIndex())+"\nDestination City: "+destinationCField.getText()+"\nCost: "+cost+" BDT");
            paymentTxtArea.setEditable(false);
            jPanel3.setVisible(true);      
           }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        boolean pCombo = false, pNumber = false;
    
        if(paymentCombo.getSelectedIndex() == 0)
        {
            paymentCombo.requestFocus();
        }
        else if(paymentCombo.getSelectedIndex()==1)
        {
            pCombo = true;
            if(paymentNumberField.getPassword().length != 16 || paymentNumberField.getPassword().length == 0)
            {
                paymentTypeLabel.setForeground(Color.red);
                paymentNumberField.requestFocus();
            }
            else
            {
                paymentTypeLabel.setForeground(Color.black);
                pNumber = true;
            }
        }
        else if(paymentCombo.getSelectedIndex()>1)
        {
            pCombo = true;
            if(paymentNumberField.getPassword().length != 11 || paymentNumberField.getPassword().length == 0)
            {
                paymentTypeLabel.setForeground(Color.red);
                paymentNumberField.requestFocus();
            }
            else
            {
                paymentTypeLabel.setForeground(Color.black);
                pNumber = true;
            }
        }
        if(pCombo == true && pNumber == true)
        {
        sH = new Shipment();  
        sH.createShipment(packageTypeCombo.getItemAt(packageTypeCombo.getSelectedIndex()), shipmentID, username, pickupDCombo.getItemAt(pickupDCombo.getSelectedIndex()), destinationDCombo.getItemAt(destinationDCombo.getSelectedIndex()), pickupCField.getText(), destinationCField.getText(), deliveryTypeCombo.getItemAt(deliveryTypeCombo.getSelectedIndex()), Integer.parseInt(weightField.getText()),Integer.parseInt(sizeField.getText()), true);
        sH.SetCost(cost);
        start_shipment();
        JOptionPane.showMessageDialog(null, "all done");
        
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    Loader li = new Loader();
    Shipment sH;
    ArrayList<Shipment> sHlist = new ArrayList<>();
    ArrayList<Shipment> cSlist = new ArrayList<>();
    Map m;    
    String shipmentID = null;
    
    float cost = 0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField contactField;
    private javax.swing.JLabel contactLabel;
    private javax.swing.JComboBox<String> deliveryTypeCombo;
    private javax.swing.JLabel deliveryTypeLabel;
    private javax.swing.JTextField destinationCField;
    private javax.swing.JLabel destinationCLabel;
    private javax.swing.JComboBox<String> destinationDCombo;
    private javax.swing.JLabel destinationDLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> packageTypeCombo;
    private javax.swing.JLabel packageTypeLabel;
    private javax.swing.JComboBox<String> paymentCombo;
    private javax.swing.JLabel paymentLabel;
    private javax.swing.JPasswordField paymentNumberField;
    private javax.swing.JTextArea paymentTxtArea;
    private javax.swing.JLabel paymentTypeLabel;
    private javax.swing.JTextField pickupCField;
    private javax.swing.JLabel pickupCLabel;
    private javax.swing.JComboBox<String> pickupDCombo;
    private javax.swing.JLabel pickupDLabel;
    private javax.swing.JTextField sizeField;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JTextField weightField;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
}
