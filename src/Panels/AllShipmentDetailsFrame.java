/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Classes.Loader;
import Classes.Shipment;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author smart view
 */
public class AllShipmentDetailsFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form AllShipmentDetailsFrame
     */
    public AllShipmentDetailsFrame() {
         initComponents();
        dm = (DefaultTableModel) shipmentTable.getModel();
        li.Shipment();
        sHlist = li.return_shipment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        sourceDivCombo = new javax.swing.JComboBox<>();
        customerTypeCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        shipmentTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Shipment Details");

        jButton1.setBackground(new java.awt.Color(0, 153, 51));
        jButton1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton1.setText("Load Tables With Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sourceDivCombo.setBackground(new java.awt.Color(0, 153, 102));
        sourceDivCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        sourceDivCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Source Division", "All Divisions", "Dhaka", "Chittagong", "Rajshahi", "Khulna", "Braisal", "Sylhet", "Rangpur" }));

        customerTypeCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        customerTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Customer Type", "All", "Personal Customers", "Business Customers" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(sourceDivCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(customerTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(sourceDivCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(customerTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setLayout(new java.awt.GridBagLayout());

        shipmentTable.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        shipmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Shipment type", "Shipment Owner", "Shipment Destination", "Delivery Type", "Shipment Total Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(shipmentTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1129;
        gridBagConstraints.ipady = 68;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 204, 102));
        jButton2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton2.setText("Load to PDF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(251, 1011, 26, 0);
        jPanel2.add(jButton2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       char c;
        int row = dm.getRowCount();
          for(int i = 0; i<row; i++)
          {
          dm.removeRow(dm.getRowCount()-1);
          }
          
        if(sourceDivCombo.getSelectedIndex()==0 )
       {
           sourceDivCombo.requestFocus();
       }
        else if(customerTypeCombo.getSelectedIndex()==0)
        {
            customerTypeCombo.requestFocus();
        }
        else if(sourceDivCombo.getSelectedIndex()==1 && customerTypeCombo.getSelectedIndex() == 1)
        {
            
            for(Shipment obj: sHlist)
            {
                dm.addRow(new Object[]{obj.get_shipmentType(), obj.get_ownerID(), obj.get_destination(), obj.get_deliveryType(), obj.get_cost()});
            }
        }
        else if(sourceDivCombo.getSelectedIndex()==1 && customerTypeCombo.getSelectedIndex() > 1)
        {
            for(Shipment obj: sHlist)
            {
                if(customerTypeCombo.getSelectedIndex() == 2)
                {
                    c = 'P';
                }
                else
                {
                    c = 'B';
                }
                if(obj.get_ownerID().charAt(5)==c)
                {
                dm.addRow(new Object[]{obj.get_shipmentType(), obj.get_ownerID(), obj.get_destination(), obj.get_deliveryType(), obj.get_cost()});
                }
            }
        }
        else if(sourceDivCombo.getSelectedIndex() > 1 && customerTypeCombo.getSelectedIndex() == 1)
        {
            for(Shipment obj: sHlist)
            {
                if(obj.get_pickup().equals(sourceDivCombo.getItemAt(sourceDivCombo.getSelectedIndex())))
                {
                dm.addRow(new Object[]{obj.get_shipmentType(), obj.get_ownerID(), obj.get_destination(), obj.get_deliveryType(), obj.get_cost()});
                }
            }
        }
        else
        {
            for(Shipment obj: sHlist)
            {
                if(customerTypeCombo.getSelectedIndex() == 2)
                {
                    c = 'P';
                }
                else
                {
                    c = 'B';
                }
                if((obj.get_ownerID().charAt(5)==c) && (obj.get_pickup().equals(sourceDivCombo.getItemAt(sourceDivCombo.getSelectedIndex()))))
                {
                dm.addRow(new Object[]{obj.get_shipmentType(), obj.get_ownerID(), obj.get_destination(), obj.get_deliveryType(), obj.get_cost()});
                }
            } 
        }
    }//GEN-LAST:event_jButton1ActionPerformed
     DefaultTableModel dm = new DefaultTableModel();
     Loader li = new Loader();
     ArrayList<Shipment> sHlist = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> customerTypeCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable shipmentTable;
    private javax.swing.JComboBox<String> sourceDivCombo;
    // End of variables declaration//GEN-END:variables
}
