package Panels;


import Classes.BusinessCustomer;
import Classes.HubAdmin;
import Classes.HubStaff;
import Classes.Loader;
import Classes.Owner;
import Classes.PersonalCustomer;
import Classes.Shipment;
import Panels.AccountFrame;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

import javax.swing.SwingWorker;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author smart view
 */
public class LandingPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    
    
    public LandingPage() {
        initComponents();
        li.Owner();
        oWlist = li.return_Owner();
        if(oWlist.isEmpty())
        {
        date = LocalDate.parse("1970-02-15");
        oW = new Owner();
        oW.createOwner("FEDEXOW0",  "Subrata K.Dey",  "01552315651",  "XXXXXX",  "XXXXXX",  "subrata@iub.edu.bd",  0000,  "Deyzone8","Do you trust yourself?",  "I trust my code",  "Male",  date);
        start_Owner();
        }
       this.setLocationRelativeTo(null);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        userPassField = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        accountTypeComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        trackField = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        passLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        addrLabel = new javax.swing.JLabel();
        zipLabel = new javax.swing.JLabel();
        divLabel = new javax.swing.JLabel();
        zipField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        fName = new javax.swing.JLabel();
        fullNameField = new javax.swing.JTextField();
        rPassLabel = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();
        retypePassField = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        securityQCombo = new javax.swing.JComboBox<>();
        dobLabel = new javax.swing.JLabel();
        dayCombo = new javax.swing.JComboBox<>();
        doneBtn = new javax.swing.JButton();
        securityAnsField = new javax.swing.JTextField();
        answerLabel = new javax.swing.JLabel();
        genderCombo = new javax.swing.JComboBox<>();
        mobileLabel = new javax.swing.JLabel();
        mobileNumberField = new javax.swing.JTextField();
        divField = new javax.swing.JTextField();
        monthCombo = new javax.swing.JComboBox<>();
        yearCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 0, 153), null, null));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("Impact", 1, 48)); // NOI18N
        jLabel1.setText("rapido");
        jPanel1.add(jLabel1);

        jTabbedPane1.setBackground(new java.awt.Color(0, 153, 153));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(200, 200));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel2.setText("NAME:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(88, 287, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel3.setText("PASSWORD:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 287, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 185;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(80, 18, 0, 0);
        jPanel2.add(userNameField, gridBagConstraints);

        userPassField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userPassFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 185;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 18, 0, 0);
        jPanel2.add(userPassField, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 153, 51));
        jButton1.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 47, 0, 0);
        jPanel2.add(jButton1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel4.setText("TIPS: You have to sign up first to login to your account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(42, 287, 60, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jButton2.setText("FORGOT  ANYTHING?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 287, 0, 0);
        jPanel2.add(jButton2, gridBagConstraints);

        accountTypeComboBox.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        accountTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Owner", "Personal", "Business", "Staff", "Hub Admin" }));
        accountTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountTypeComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(80, 53, 0, 220);
        jPanel2.add(accountTypeComboBox, gridBagConstraints);

        jTabbedPane1.addTab("LOGIN", jPanel2);

        jLabel15.setBackground(new java.awt.Color(51, 51, 255));
        jLabel15.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel15.setText("Enter your tracking id number:");

        jButton4.setBackground(new java.awt.Color(0, 153, 0));
        jButton4.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jButton4.setText("Track!");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(982, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(trackField)))
                .addGap(222, 222, 222))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(trackField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TRACK YOUR SHIPMENT", jPanel4);

        jTextPane2.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jTextPane2.setText("                                         \n                               \n\n                                                                                   OUR EMAIL : rapido@gmail.com\n                                                               \n                                                                                       CUSTOMER HELPLINE: 786\n                                             \n                                                             HEAD OFFICE: NIKETON ,ROAD NO-10,HOUSE-13,DHAKA,BANGLADESH");
        jScrollPane1.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1312, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("CONTACT US", jPanel3);

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jTextPane1.setText("1. DO YOU WANT TO SHIP SOMETHING TO OTHER DISTRICT?\nANSWER : To ship something through us ,you have to register an account and login.If you ship something not so often ,you can create personal account or if you ship parcel most often then you have to open a business account.\n\n2. HOW DO I OPEN A BUSINESS ACCOUNT?\nANSWER: You have to take permission from the owner to open a business account.For query please dial up 786(Customer Helpline).\n\n3.CAN I TRACK MY SHIPMENT?\nANSWER: Of course you can! But do not tell the tracking number to anyone!If your parcel is delivered to the destination , you will get an email confirmation.\n\n4.HOW DO I CONTACT WITH YOU?\nANSWER: To reach our customer helpline ,please dial up 786 or if you want to contact us through mail, you can mail us to rapido@gmail.com..\n\n5.HOW MANY DELIVERY TYPES WE OFFER?\nANSWER: We offer two types of delivery : (1) Standard-(SHIPS WITHIN 7 WORKING DAYS)\n                                                              (2) Emergency-(SHIPS WITHIN 2 WORKING DAYS)\n\n    ");
        jScrollPane3.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1312, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("NEED HELP?", jPanel6);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        passLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        passLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 81, 0, 0);
        jPanel5.add(passLabel, gridBagConstraints);

        emailLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        emailLabel.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 101, 0, 0);
        jPanel5.add(emailLabel, gridBagConstraints);

        addrLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        addrLabel.setText("Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 101, 0, 0);
        jPanel5.add(addrLabel, gridBagConstraints);

        zipLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        zipLabel.setText("Zip Code:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 101, 0, 0);
        jPanel5.add(zipLabel, gridBagConstraints);

        divLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        divLabel.setText("Division:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 101, 0, 0);
        jPanel5.add(divLabel, gridBagConstraints);

        zipField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                zipFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 65, 0, 0);
        jPanel5.add(zipField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 65, 0, 0);
        jPanel5.add(emailField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 65, 0, 0);
        jPanel5.add(addressField, gridBagConstraints);

        fName.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        fName.setText("Full Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 101, 0, 0);
        jPanel5.add(fName, gridBagConstraints);

        fullNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameFieldActionPerformed(evt);
            }
        });
        fullNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fullNameFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(44, 65, 0, 0);
        jPanel5.add(fullNameField, gridBagConstraints);

        rPassLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        rPassLabel.setText("Retype Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 81, 0, 0);
        jPanel5.add(rPassLabel, gridBagConstraints);

        passField.setToolTipText("Password must conatain atleat 8 characters, 1 uppercase letter, 1 lowercase letter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 281;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(42, 28, 0, 0);
        jPanel5.add(passField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 281;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 28, 0, 0);
        jPanel5.add(retypePassField, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel12.setText("Security Question:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 81, 0, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        securityQCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        securityQCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What is your pets name?", "What is the password of your cellphone?", "Do you trust yourself?" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 28, 0, 0);
        jPanel5.add(securityQCombo, gridBagConstraints);

        dobLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        dobLabel.setText("Date of Birth:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 101, 0, 0);
        jPanel5.add(dobLabel, gridBagConstraints);

        dayCombo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        dayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        dayCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dayCombo.setOpaque(false);
        dayCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayComboFocusGained(evt);
            }
        });
        dayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 0);
        jPanel5.add(dayCombo, gridBagConstraints);

        doneBtn.setBackground(new java.awt.Color(0, 153, 0));
        doneBtn.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        doneBtn.setText("Done");
        doneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 51, 6, 163);
        jPanel5.add(doneBtn, gridBagConstraints);

        securityAnsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                securityAnsFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 281;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 28, 0, 0);
        jPanel5.add(securityAnsField, gridBagConstraints);

        answerLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        answerLabel.setText("Your Answer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 81, 0, 0);
        jPanel5.add(answerLabel, gridBagConstraints);

        genderCombo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        genderCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gender", "Male", "Female", "Other" }));
        genderCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 25;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 32;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 81, 0, 0);
        jPanel5.add(genderCombo, gridBagConstraints);

        mobileLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        mobileLabel.setText("Mobile Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 81, 0, 0);
        jPanel5.add(mobileLabel, gridBagConstraints);

        mobileNumberField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobileNumberFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 281;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 28, 0, 0);
        jPanel5.add(mobileNumberField, gridBagConstraints);

        divField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                divFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 65, 0, 0);
        jPanel5.add(divField, gridBagConstraints);

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthComboFocusLost(evt);
            }
        });
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 6, 0, 0);
        jPanel5.add(monthCombo, gridBagConstraints);

        yearCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 61, 0, 0);
        jPanel5.add(yearCombo, gridBagConstraints);

        jTabbedPane1.addTab("SIGN UP", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1317, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_userNameFieldActionPerformed

    private void userPassFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userPassFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userPassFieldActionPerformed
    public void saveLogin(String x) throws FileNotFoundException
    {
        DataOutputStream out = new DataOutputStream(new BufferedOutputStream(
        new FileOutputStream("LoginFile", true)));
        LocalDate date = LocalDate.now();
        LocalTime time = LocalTime.now();
        try
        {
            out.writeUTF(x);
            out.writeUTF(date.toString());
            out.writeUTF(time.toString());
            out.close();
        } catch(Exception e){}
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        boolean valid = false, shift =false;
        //Personal
        if(accountTypeComboBox.getSelectedItem()=="Personal"){
            li.PersonalCustomer();
            pClist = li.return_personal();
            if(!(pClist.isEmpty()))
            {
                for(PersonalCustomer obj:pClist)
                {
                    if(obj.getID().equals(userNameField.getText()) && obj.get_password().equals(String.valueOf(userPassField.getPassword())))
                    {
                        valid = true;
                        break;
                    }
                }
                if(valid == true)
                {
                  AccountFrame fr;
                    try {
                        fr = new AccountFrame(userNameField.getText());
                         fr.setLocation(0, 0);
                         fr.setVisible(true);
                          this.setVisible(false);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        saveLogin(userNameField.getText());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                 
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Invalid Username/Password", "Error", JOptionPane.ERROR_MESSAGE); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "No Personal Customer Signed Up", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        } 
        //Owner
        else if(accountTypeComboBox.getSelectedItem()=="Owner"){
            li.Owner();
            oWlist = li.return_Owner();
            
            for(Owner obj : oWlist)
            {
            if(obj.getID().equals(userNameField.getText()) && obj.get_password().equals(String.valueOf(userPassField.getPassword())))
            {
               valid= true;
               break;
            }
            }
            if(valid == true)
            {
            OwnerAccountFrame ownerfr;
                try {
                    ownerfr = new OwnerAccountFrame(userNameField.getText());
                    ownerfr.setVisible(true);
            this.setVisible(false);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    saveLogin(userNameField.getText());
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
            else
            {
               JOptionPane.showMessageDialog(null, "Invalid Username/Password", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        }
        //HubAdmin
        else if(accountTypeComboBox.getSelectedItem()=="Hub Admin"){
            ArrayList<HubAdmin> hAlist = new ArrayList<>();
            li.HubAdmins();
            hAlist = li.return_hubAdmin();
            if(!(hAlist.isEmpty()))
            {
                for(HubAdmin obj: hAlist)
                {
                    if((obj.getID().equals(userNameField.getText()) && obj.get_password().equals(String.valueOf(userPassField.getPassword()))))
                    {
                        valid = true;
                        if(((obj.getStartShift().isBefore(LocalTime.now())) &&(obj.getEndShift().isAfter(LocalTime.now()))))
                        {
                            shift = true;
                            break;
                        }
                        
                    }
                 
                }
              
                if(valid == true && shift == true)
                {
                HubAdminFrame hubfr = new HubAdminFrame(userNameField.getText());
                    try {
                        saveLogin(userNameField.getText());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                hubfr.setVisible(true);
                this.setVisible(false);
                }
                else
                {
                    if(valid== true && shift==false)
                            {
                                JOptionPane.showMessageDialog(null, "Invalid Time", "Error", JOptionPane.ERROR_MESSAGE);  
                            }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Invalid Username/Password", "Error", JOptionPane.ERROR_MESSAGE);   
                    }
                  
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "No Hub Admins Employed", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        }
        //Business
        else if(accountTypeComboBox.getSelectedItem()=="Business"){
            ArrayList<BusinessCustomer> bClist = new ArrayList<>();
            li.BusinessCustomer();
            bClist = li.return_business();
            if(!(bClist.isEmpty()))
            {
                for(BusinessCustomer obj: bClist)
                {
                     if(obj.getID().equals(userNameField.getText()) && obj.get_password().equals(String.valueOf(userPassField.getPassword())))
                    {
                        valid = true;
                        break;
                    }
                }
                if(valid == true)
                {
                BusinessAccountFrame busFrame;
                    try {
                        busFrame = new BusinessAccountFrame(userNameField.getText());
                        busFrame.setVisible(true);
                this.setVisible(false);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        saveLogin(userNameField.getText());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                }
                else
                {
                 JOptionPane.showMessageDialog(null, "Invalid Username/Password", "Error", JOptionPane.ERROR_MESSAGE); 
                }
            }
           else
           {
                JOptionPane.showMessageDialog(null, "No Business Custtome Signed Up", "Error", JOptionPane.ERROR_MESSAGE); 
           }
        }
        //Staff
        else if(accountTypeComboBox.getSelectedItem()=="Staff"){
             ArrayList<HubStaff> hSlist = new ArrayList<>();
            li.HubStaff();
            hSlist = li.return_hubStaff();
            if(!(hSlist.isEmpty()))
            {
                for(HubStaff obj: hSlist)
                {
                    if((obj.getID().equals(userNameField.getText()) && obj.get_password().equals(String.valueOf(userPassField.getPassword()))))
                    {
                        valid = true;
                        if( ((obj.getStartShift().isBefore(LocalTime.now())) &&(obj.getEndShift().isAfter(LocalTime.now()))))
                        {
                            
                            shift = true;
                            break;
                        }
                      
                    }
                    
                }
              
                if(valid == true && shift == true)
                {
                StaffAccountFrame stfr = new StaffAccountFrame(userNameField.getText());
                    try {
                        saveLogin(userNameField.getText());
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(LandingPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                stfr.setVisible(true);
                this.setVisible(false);
                }
                else
                {
                    if(valid == true && shift == false)
                    {
                      JOptionPane.showMessageDialog(null, "Invalid time", "Error", JOptionPane.ERROR_MESSAGE);    
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Invalid Username/Password", "Error", JOptionPane.ERROR_MESSAGE);  
                    }
                   
                }
            }
            else
            {
              JOptionPane.showMessageDialog(null, "No Staff Has Been Employed", "Error", JOptionPane.ERROR_MESSAGE); 
            }
        }
       
        
        
        
        //fr.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void accountTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountTypeComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      this.setVisible(false);
      new ForgotFrame().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void dayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboActionPerformed
        
    }//GEN-LAST:event_dayComboActionPerformed

    private void genderComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboActionPerformed
//SwingWorker
    public void start_personal()
     {
        SwingWorker<Boolean,Void> worker = new SwingWorker<Boolean,Void>(){
            @Override
            public Boolean doInBackground() throws Exception{
                String fileName="PersonalCustomer.bin";
               File file = new File (fileName);
                ObjectOutputStream out = null;
                 boolean append=true;
                    try{
                        if (!file.exists () || !append) out =
                            new ObjectOutputStream (new FileOutputStream (fileName));
                        else out = 
                            new AppendableObjectOutputStream (new FileOutputStream (fileName, append));
                        out.writeObject(pC);
                        out.flush ();
                    }catch (Exception e){
                        //e.printStackTrace ();
                    }finally{
                        try{
                            if (out != null) out.close();
                        }catch (Exception e){
                            //e.printStackTrace();
                        }
        }
                    //Get properties object    
          Properties props = new Properties();    
          props.put("mail.smtp.host", "smtp.gmail.com");    
          props.put("mail.smtp.socketFactory.port", "465");    
          props.put("mail.smtp.socketFactory.class",    
                    "javax.net.ssl.SSLSocketFactory");    
          props.put("mail.smtp.auth", "true");    
          props.put("mail.smtp.port", "465");    
          //get Session   
          Session session = Session.getDefaultInstance(props,    
           new javax.mail.Authenticator() {    
           protected PasswordAuthentication getPasswordAuthentication() {    
           return new PasswordAuthentication("rapidoteam2018@gmail.com","7951384620");  
           }    
          });    
          //compose message    
          try {    
           MimeMessage message = new MimeMessage(session);    
           message.addRecipient(Message.RecipientType.TO,new InternetAddress(emailField.getText()));    
           message.setSubject("Confirmation of Account Creation");    
           message.setText("Dear Sir, \n\nThis email is to confirm the creation of a Rapido account for "+fullNameField.getText()+". Your ID is: "+id+".\n\nWe look to provide you with the quickest and most secure shipping service of Bangladesh. \n\n Your's Sincerely, \n\n Rapido Team");    
           //send message  
           Transport.send(message);      
          } catch (MessagingException e) {throw new RuntimeException(e);}
                return true;
            }

            
        };
        worker.execute(); 
     }
    
    
    public void start_Owner()
     {
        SwingWorker<Boolean,Object[]> worker = new SwingWorker<Boolean,Object[]>(){
            @Override
            public Boolean doInBackground() throws Exception{
                String fileName="Owner.bin";
               File file = new File (fileName);
                ObjectOutputStream out = null;
                 boolean append=true;
                    try{
                        if (!file.exists () || !append) out =
                            new ObjectOutputStream (new FileOutputStream (fileName));
                        else out = 
                            new AppendableObjectOutputStream (new FileOutputStream (fileName, append));
                        out.writeObject(oW);
                        out.flush ();
                    }catch (Exception e){
                        //e.printStackTrace ();
                    }finally{
                        try{
                            if (out != null) out.close();
                        }catch (Exception e){
                            //e.printStackTrace();
                        }
        }
                return true;
            }

            @Override
            public void process(List<Object[]> obj){
               // result.setText(result.getText()+"No of Student of "+obj.get(0)[0].toString()+" Dept: "+Integer.parseInt(obj.get(0)[1].toString())+"\n");
            }
            
            @Override
            public void done() {
                boolean done=false;
                try {
                    done = get();
                } catch(Exception ex) {
                    ex.printStackTrace();
                }
                if(done){
                    //statusLabel.setText("Text Files are created successfully");
                }else{
                    //statusLabel.setText("Text Files creation Failed");
                }
            }
        };
        worker.execute(); 
     }
    
    class AppendableObjectOutputStream extends ObjectOutputStream {
       public AppendableObjectOutputStream(OutputStream out) throws IOException {
        super(out);
    }
  @Override
    protected void writeStreamHeader() throws IOException {}
    
  }
    
    private void securityAnsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_securityAnsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_securityAnsFieldActionPerformed

    boolean passCheck(char[] pass)
    {
        boolean foundUpper = false, foundLower = false, foundAlpha = false;
        
        if(pass.length<8)
        {
            return false;
        }
        
        for(int i = 0; i<pass.length; i++)        
        {
            if(Character.isAlphabetic(pass[i]))
            {
                foundAlpha = true;
                if(Character.isUpperCase(pass[i]))
                {
                    foundUpper = true;
                }
                else
                {
                    foundLower = true;
                }
            }
        }
        if(foundUpper == true && foundLower == true && foundAlpha == true)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    
    
    private void doneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneBtnActionPerformed
      //id
      String prev_id;
      //checkbools
      boolean name = false, em = false, addr = false, zipCode = false, division = false, dob = false, pass = false, rpass = false, answer = false, gender = false, mobile = false;
      //loadArrays
      li.PersonalCustomer();
      li.loadAllEmails();
      pClist = li.return_personal();
      emailList = li.return_AllEmails();
      
      //namecheck
      if(fullNameField.getText().equals(""))
      {
          fName.setForeground(Color.red);
          fullNameField.requestFocus();
      }
      else
      {
          name = true;
          fName.setForeground(Color.black);
      }
      //emailFieldCheck
      if(emailField.getText().equals(""))
      {
          emailLabel.setForeground(Color.red);
          emailField.requestFocus();
      }
      else
      {
          em = true;
          emailLabel.setForeground(Color.black);
      }
      //emailExistCheck
      if(!emailList.isEmpty())
      {
          for(String emails : emailList)
          {
              if(emailField.getText().equals(emails))
              {
                  emailField.setForeground(Color.red);
                  em = false;
                  emailField.requestFocus();
                  break;
              }
          }
      }
      //addressCheck
      if(addressField.getText().equals(""))
      {
          addrLabel.setForeground(Color.red);
          addressField.requestFocus();
      }
      else
      {
          addr = true;
          addrLabel.setForeground(Color.black);
      }
      //zipCheck
      if(zipField.getText().equals(""))
      {
          zipLabel.setForeground(Color.red);
          zipField.requestFocus();
      }
      else
      {
          zipCode = true;
          zipLabel.setForeground(Color.black);
      }
      //divisionCheck
      if(divField.getText().equals(""))
      {
          divLabel.setForeground(Color.red);
          divField.requestFocus();
      }
      else
      {
          division = true;
          divLabel.setForeground(Color.black);
      }
      //dobCheck 
      if(dayCombo.getSelectedIndex() ==0 && monthCombo.getSelectedIndex() ==0 && yearCombo.getSelectedIndex() == 0)
      {
          dobLabel.setForeground(Color.red);
      }
          if(dayCombo.getSelectedIndex() ==0)
          {
              dayCombo.requestFocus();
          }
          
          if(monthCombo.getSelectedIndex()==0)
          {
              monthCombo.requestFocus();
          }
        
          
          if(yearCombo.getSelectedIndex() ==0)
          {
              yearCombo.requestFocus();
          }

       if(dayCombo.getSelectedIndex() >0 && monthCombo.getSelectedIndex() >0 && yearCombo.getSelectedIndex() > 0)
      {
          dobLabel.setForeground(Color.black);
          dob = true;
      }
      //passCheck
      if(passField.getPassword().length == 0 || passCheck(passField.getPassword()) == false)
      {
          passLabel.setForeground(Color.red);
          passField.requestFocus();
          
      }
      else
      {
          passLabel.setForeground(Color.black);
          pass = true;
      }
      //RtypePassCheck
      if(!(Arrays.toString(retypePassField.getPassword()).equals(Arrays.toString(passField.getPassword()))) || retypePassField.getPassword().length == 0)
      {
          rPassLabel.setForeground(Color.red);
          retypePassField.requestFocus();
      }
      else
      {
          rPassLabel.setForeground(Color.black);
          rpass = true;  
      }
      //checkAnswer
      if(securityAnsField.getText().equals(""))
      {
          answerLabel.setForeground(Color.red);
          securityAnsField.requestFocus();
      }
      else
      {
         answerLabel.setForeground(Color.black);
          answer = true;
      }
      //checkGender
      if(genderCombo.getSelectedIndex() == 0)
      {
         genderCombo.requestFocus();
      }
      else
      {
         gender = true; 
      }
      //checkMobile
      if(mobileNumberField.getText().equals(""))
      {
          mobileLabel.setForeground(Color.red);
          mobileLabel.requestFocus();
      }
      else if(mobileNumberField.getText().length()!=11)
      {
          mobileLabel.setForeground(Color.red);
          mobileLabel.requestFocus();
      }
      else
      {
          mobileLabel.setForeground(Color.black);
          mobile = true;
      }
      //createPersonalAccount
      if(name == true && em == true && addr == true && zipCode == true && division == true && dob == true && pass == true && rpass == true && answer == true && gender == true && mobile == true)
      {
          if(pClist.isEmpty())
          {
              id = "FEDEXPC0";
          }
          else
          {
              prev_id = pClist.get(pClist.size()-1).getID();
              String[] split = prev_id.split("PC");
              int number = Integer.parseInt(split[1]);
              number++;
              id = "FEDEXPC"+number;
          }
          String d = ""; 
          LocalDate date;
           d = d + yearCombo.getItemAt(yearCombo.getSelectedIndex())+"-";
           d = d + monthCombo.getItemAt(monthCombo.getSelectedIndex()) +"-";
          if(dayCombo.getItemAt(dayCombo.getSelectedIndex()).length()==1){
              d = d + "0"+dayCombo.getItemAt(dayCombo.getSelectedIndex());
          }
          else{
              d = d + dayCombo.getItemAt(dayCombo.getSelectedIndex());
          }
          // d = d + dayCombo.getItemAt(dayCombo.getSelectedIndex());
          
         
          System.out.println(d);
          date = LocalDate.parse(d);
          pC = new PersonalCustomer();
          pC.createPersonalCustomer(id, fullNameField.getText(), mobileNumberField.getText(), addressField.getText(), divField.getText(), emailField.getText(), Integer.parseInt(zipField.getText()), String.valueOf(passField.getPassword()), securityQCombo.getItemAt(securityQCombo.getSelectedIndex()), securityAnsField.getText(), genderCombo.getItemAt(genderCombo.getSelectedIndex()), date);
          start_personal();
          JOptionPane.showMessageDialog(null, "New Personal Customer Account Created \n Your Login ID has been sent to your Email", "Success", JOptionPane.INFORMATION_MESSAGE);
      }
    }//GEN-LAST:event_doneBtnActionPerformed

    private void fullNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameFieldActionPerformed

    private void fullNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fullNameFieldKeyPressed
        int key = evt.getKeyCode();
        if((key>=evt.VK_A && key<=evt.VK_Z) || key==evt.VK_PERIOD || key==evt.VK_SPACE || key==evt.VK_BACK_SPACE || key==evt.VK_QUOTE)
        {
            fullNameField.setEditable(true);
        }
        else
        {
            fullNameField.setEditable(false);
        }
    }//GEN-LAST:event_fullNameFieldKeyPressed

    private void zipFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zipFieldKeyPressed
         int key = evt.getKeyCode();
        if(key>=evt.VK_0&&key<=evt.VK_9 || key>=evt.VK_NUMPAD0&&key<=evt.VK_NUMPAD9 || key==KeyEvent.VK_BACKSPACE)
        {
            zipField.setEditable(true);
        }
        else
        {
            zipField.setEditable(false);
        }
    }//GEN-LAST:event_zipFieldKeyPressed

    private void mobileNumberFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileNumberFieldKeyPressed
        int key = evt.getKeyCode();
        if(key==evt.VK_BACK_SPACE || ((key>=evt.VK_0&&key<=evt.VK_9)) || (key>=evt.VK_NUMPAD0&&key<=evt.VK_NUMPAD9))
        {
            mobileNumberField.setEditable(true);
        }
        else
        {
            mobileNumberField.setEditable(false);
        }
    }//GEN-LAST:event_mobileNumberFieldKeyPressed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
       
    }//GEN-LAST:event_monthComboActionPerformed

    private void monthComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthComboFocusLost
     
    }//GEN-LAST:event_monthComboFocusLost

    private void dayComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayComboFocusGained
       int month = monthCombo.getSelectedIndex();
       dayCombo.removeAllItems();
       dayCombo.addItem("Day");
        if(month == 1 || month == 3 || month==5 || month==7 || month==8 || month==10 || month==12 )
        {
            for(int i =1; i<=31; i++)
            {
                dayCombo.addItem(Integer.toString(i));
            }
        }
        else if(month==4 || month==6 || month ==9 || month==11)
        {
            for(int i =1; i<=30; i++)
            {
                dayCombo.addItem(Integer.toString(i));
            }
        }
        else if(month==2)
        {
            int year = Integer.parseInt(yearCombo.getItemAt(yearCombo.getSelectedIndex()));
            if((year%4==0 && year%100!=0) || (year%100==0 && year%400==0))
            {
                for(int i =1; i<=29; i++)
            {
                dayCombo.addItem(Integer.toString(i));
            }
            }
            else
            {
                for(int i =1; i<=28; i++)
            {
                dayCombo.addItem(Integer.toString(i));
            }
            }
        }
    }//GEN-LAST:event_dayComboFocusGained

    private void divFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_divFieldKeyPressed
         int key = evt.getKeyCode();
        if((key>=evt.VK_A && key<=evt.VK_Z) || key==evt.VK_BACK_SPACE )
        {
           divField.setEditable(true);
        }
        else
        {
            divField.setEditable(false);
        }
    }//GEN-LAST:event_divFieldKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       JOptionPane.showMessageDialog(this,"you have to login first");
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandingPage().setVisible(true);
                
            }
        });
    }
   ArrayList<PersonalCustomer> pClist = new ArrayList<>();
   Loader li = new Loader();
   ArrayList<String> emailList = new ArrayList<>();
   PersonalCustomer pC;
   ArrayList<Owner> oWlist = new ArrayList<>();
  ArrayList<Shipment> sHlist = new ArrayList<>();
     ArrayList<Shipment> cSlist = new ArrayList<>();
   Owner oW; 
    LocalDate date;
    String id ="";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountTypeComboBox;
    private javax.swing.JLabel addrLabel;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel answerLabel;
    private javax.swing.JComboBox<String> dayCombo;
    private javax.swing.JTextField divField;
    private javax.swing.JLabel divLabel;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JButton doneBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel fName;
    private javax.swing.JTextField fullNameField;
    private javax.swing.JComboBox<String> genderCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField mobileNumberField;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel rPassLabel;
    private javax.swing.JPasswordField retypePassField;
    private javax.swing.JTextField securityAnsField;
    private javax.swing.JComboBox<String> securityQCombo;
    private javax.swing.JTextField trackField;
    private javax.swing.JTextField userNameField;
    private javax.swing.JPasswordField userPassField;
    private javax.swing.JComboBox<String> yearCombo;
    private javax.swing.JTextField zipField;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables
}
